CucumberTeste = Pasta raiz do projeto
Specs = Pasta onde fica os arquivos feature
Step Definition = Pasta onde são executados os testes
Support = Pasta onde ficam as configurações
Env = arquivo de configuração
Gemfile = onde instalamos as gem para usar no projeto


Após escrever o cenário rodar o comando cucumber no terminal
Ele irá gerar os métodos, após isso é só copiar e colocar em um arquivo .rb na pasta step_definition
depois é só criar o conteúdo do método e rodar novamente o comando cucumber

Contexto, é equivalente a uma classe estática no java
Ele vai rodar sempre antes de cada cenário

Chamando steps, é semelhante ao contexto, a diferença é que o contexto roda antes de cada cenário
e o chamando step você vai chamar um passo necessário para rodar o passo que vocẽ está fazendo

Rodar cenario ou funcionalidades usando tag
cucumber --tag(s) @(TAG),@(OUTRA TAG)
E quando não quiser rodar algumas tag colocar o ~ antes do @
cucumber -t @(TAG),~@(OUTRA TAG)

Exemplos de nós xpath
nodename seleciona todos os nós com nome nodename
/ seleciona nó raiz
// seleciona nós no documento a partir do nó atual que corresponde à seleção 
. seleciona nó atual
.. seleciona o pai do nó atual
@ seleciona atributos

predicados ficam em colchetes 
//a[@id="teste"]

Buscando elementos
All todos os elementos
Find elemento mapeado
First primeiro elemento encontrado
Find_Button busca botão
Find_Link busca link
Find_By_Id elemento com id mapeado